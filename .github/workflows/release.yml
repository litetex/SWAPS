name: Release

on: 
  push:
    branches: [ master ]

jobs:
  create_release:
    runs-on: ubuntu-latest
    outputs:
       upload_url: ${{ steps.create_draft.outputs.upload_url }}
       version: ${{ steps.create_version.outputs.version }}

    steps:
      - name: Release - Create Draft for a Release
        id: create_draft
        uses: release-drafter/release-drafter@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate version - Cut away the first letter (v)
        id: create_version
        run: |
          tag_name=${{ steps.create_draft.outputs.tag_name }}
          echo "version=$(echo ${tag_name:1})" >> $GITHUB_OUTPUT

  build:
   runs-on: windows-latest
   needs: [create_release]
   strategy:
      matrix:
        os: [win-x64]
        configuration: [Release]
   steps:
    - uses: actions/checkout@v4
         
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8.x
        
    - name: Build
      run: dotnet build --configuration ${{ matrix.configuration }}
      working-directory: src
    
    - name: Publish ${{ matrix.os }} ${{ matrix.configuration }} SWAPS
      working-directory: src/SWAPS
      run: |
        dotnet publish -c ${{ matrix.configuration }} -r ${{ matrix.os }} --self-contained -p:PublishSingleFile=true -p:DebugType=None -p:IncludeNativeLibrariesForSelfExtract=true -p:PublishTrimmed=true -p:Version=${{ needs.create_release.outputs.version }} 

    - name: Publish ${{ matrix.os }} ${{ matrix.configuration }} SWAPS.Admin
      working-directory: src/SWAPS.Admin
      run: |
        dotnet publish -c ${{ matrix.configuration }} -r ${{ matrix.os }} --self-contained -p:PublishSingleFile=true -p:DebugType=None -p:IncludeNativeLibrariesForSelfExtract=true -p:PublishTrimmed=true -p:Version=${{ needs.create_release.outputs.version }} 

    - name: Combine artifacts
      run: |
        mkdir buildtmp
        Copy-Item -Recurse -Path "src/SWAPS/bin/${{ matrix.configuration }}/net6.0/${{ matrix.os }}/publish/*" -Destination "buildtmp/"
        Copy-Item -Recurse -Path "src/SWAPS.Admin/bin/${{ matrix.configuration }}/net6.0-windows/${{ matrix.os }}/publish/*" -Destination "buildtmp/"
        cd buildtmp
        dir
        Compress-Archive -Path * -DestinationPath all.zip

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: all-${{ matrix.os }}
        path: |
          buildtmp/all.zip
        if-no-files-found: error
      
    - name: Release ${{ matrix.os }} - Upload Release Asset
      uses: shogo82148/actions-upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create_release.outputs.upload_url }} 
        asset_path: ./buildtmp/all.zip
        asset_name: SWAPS-${{ matrix.os }}.zip
        asset_content_type: application/zip
  
  after_release:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
    - uses: actions/checkout@v4
    
    - name: pull-request
      uses: repo-sync/pull-request@v2
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        destination_branch: "develop"
        pr_title: "Sync back"
        pr_body: "An automated PR to sync changes back"
